const express = require("express");
const bodyParser = require("body-parser");
const axios = require("axios");
require("dotenv").config();

const app = express();
const PORT = process.env.PORT || 3000;

app.use(bodyParser.json());
app.use(express.static("."));
app.use('/images', express.static(__dirname + '/images')); // ‚úÖ –¥–ª—è –æ—Ç–¥–∞—á–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫ fuck / no_fuck

// ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞
app.post("/create-ticket", async (req, res) => {
  const { subject, message, client_phone, tag, user_id, status, message_type } = req.body;

  if (!subject || !message) {
    return res.send("‚ùå Subject –∏ Message –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã");
  }

  const phones = client_phone
    .split(",")
    .map(p => p.replace(/[^0-9]/g, "").replace(/^8/, "7").replace(/^\+7/, "7"))
    .filter(p => p.length > 0);

  const results = [];

  for (const phone of phones) {
    try {
      const payload = {
        api_token: process.env.API_TOKEN,
        subject,
        message,
        client_phone: phone,
        channel_id: 66235,
        from: "user",
        status: Number(status),
        tag,
        assignee_id: user_id,
      };

      if (message_type === "private") {
        payload.private_comment = "true";
      }

      const response = await axios.post("https://api.usedesk.ru/create/ticket", payload);

      const ticket_id = response.data.ticket_id || response.data.ticket?.id;
      const link = `https://secure.usedesk.ru/tickets/${ticket_id}`;
      results.push(`‚úÖ ${phone}: <a href="${link}" target="_blank">—Ç–∏–∫–µ—Ç ID ${ticket_id}</a>`);
    } catch (error) {
      const err = error.response?.data?.error || error.message;
      results.push(`‚ùå ${phone}: –æ—à–∏–±–∫–∞ ‚Äî ${err}`);
    }
  }

  res.send(results.join("<br>"));
});

// ‚úÖ –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ (–æ—Ç–¥–∞—ë—Ç JSON –¥–ª—è Apple UI)
app.post("/search-client", async (req, res) => {
  let { query } = req.body;
  query = String(query || "").replace(/[^0-9]/g, "").replace(/^8/, "7");
  console.log("üîç –ü–æ–∏—Å–∫ –ø–æ:", query);

  try {
    const response = await axios.post("https://api.usedesk.ru/clients", {
      api_token: process.env.API_TOKEN,
      query,
      search_type: "partial_match"
    });

    const clients = Array.isArray(response.data) ? response.data : response.data.clients;
    if (!clients || clients.length === 0) {
      return res.json({ error: "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ" });
    }

    const formatted = clients.map(c => ({
      id: c.id,
      name: c.name || "-",
      email: Array.isArray(c.emails) ? c.emails.join(", ") : "-",
      phone: c.phone || "-",
      tickets: c.tickets || []
    }));

    res.json({ clients: formatted });
  } catch (error) {
    const err = error.response?.data?.error || error.message;
    res.json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: " + err });
  }
});

// ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
app.post("/create-client", async (req, res) => {
  const { name, emails, note, phone } = req.body;

  try {
    const response = await axios.post("https://api.usedesk.ru/create/client", {
      api_token: process.env.API_TOKEN,
      name,
      emails: emails ? [emails] : [],
      note,
      phone: phone?.replace(/[^0-9]/g, "").replace(/^8/, "7")
    });

    const clientId = response.data.client_id || response.data.client?.id;
    if (clientId) {
      const link = `https://secure.usedesk.ru/clients/details/${clientId}`;
      res.send(`‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω! <a href="${link}" target="_blank">ID: ${clientId}</a><br>
        –ò–º—è: ${name || "-"}<br>
        Email: ${emails || "-"}<br>
        –¢–µ–ª–µ—Ñ–æ–Ω: ${phone || "-"}<br>
        –ó–∞–º–µ—Ç–∫–∏: ${note || "-"}`);
    } else {
      res.send("‚ö†Ô∏è –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω, –Ω–æ ID –Ω–µ –ø–æ–ª—É—á–µ–Ω.");
    }
  } catch (error) {
    const err = error.response?.data?.error || error.message;
    res.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞: " + err);
  }
});

// ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
app.post("/update-client", async (req, res) => {
  const { client_id, name, emails, phone, note } = req.body;

  try {
    await axios.post("https://api.usedesk.ru/update/client", {
      api_token: process.env.API_TOKEN,
      client_id,
      name,
      emails: emails ? [emails] : [],
      phone: phone?.replace(/[^0-9]/g, "").replace(/^8/, "7"),
      note,
      is_new_note: "true"
    });

    res.send("‚úÖ –ö–ª–∏–µ–Ω—Ç –æ–±–Ω–æ–≤–ª—ë–Ω");
  } catch (error) {
    const err = error.response?.data?.error || error.message;
    res.send("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞: " + err);
  }
});

app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
});
